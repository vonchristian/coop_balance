<% @products.each do |product| %>
                <tr>
                  <td>
                    <b><%= product.name.try(:upcase) %></b><br>

                    <% product.unit_of_measurements.each do |unit_of_measurement| %>
                      <small class="text-success"><%= number_to_currency unit_of_measurement.price %> / <%= unit_of_measurement.code %></small>
                    <% end %>

                  </td>
                  <td>

                      <b class="text-danger"><%= product.sales_balance %> <%= product.base_measurement_code.try(:upcase) %></b><br>
                      <small>SOLD</small>

                  </td>
                    <%= simple_form_for @sales_return_line_item, url: :store_front_module_sales_return_line_items do |f| %>
                    <td width="100px">
                      <% if product.sales_balance > 0 %>
                        <%= f.input :quantity, as: :string, input_html: { oninput: 'calculateLineItemTotalCost()', id: 'line_item_quantity', value: 1}, label: false, autofocus: true %>

                      <% end %>
                    </td>
                    <td><% if product.sales_balance > 0 %>
                        <%= f.input :unit_of_measurement_id, input_html: { value: product.base_measurement }, label: false, collection: product.unit_of_measurements.all.map{|a| [a.code, a.id] } %>
                      <% end %></td>
                      <%= f.input :cart_id, input_html: { value: @cart.id }, as: :hidden %>
                      <%= f.input :product_id, input_html: { value: product.id }, as: :hidden %>
                    <td>
                      <% if product.sales_balance >  0 %>
                        <%= f.submit "Add", class: "btn btn-danger btn-sm pull-right" %>
                      <% else %>
                        <span class="text-danger"><b>OUT OF STOCK</b></span>
                      <% end %>
                    </td>
                    <% end %>

                </tr>
              <% end %>
