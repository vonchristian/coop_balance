wb = xlsx_package.workbook
wb.styles do |style|
  defaults = { style: :thin, color: "000000" }
  border = style.add_style(alignment: { horizontal: :left, vertical: :top, wrap_text: true }, sz: 9, border: defaults)
  header_style = style.add_style(bg_color: "ded4d3", b: true, sz: 9, alignment: { horizontal: :center, wrap_text: true }, border: defaults)
  comma = style.add_style(num_fmt: 3, sz: 9)
  total_style = style.add_style(num_fmt: 3, sz: 9, b: true)
  amounts_style = style.add_style(num_fmt: 3, sz: 9, border: defaults, alignment: { wrap_text: true })
  title_style = style.add_style(sz: 13)
  subtitle_style = style.add_style(alignment: { horizontal: :left, vertical: :top, wrap_text: true }, sz: 9)
  summary_style = style.add_style(alignment: { horizontal: :left, vertical: :top, wrap_text: true }, sz: 9, b: true)

  wb.add_worksheet(name: "JEV-#{@to_date.strftime('%b,%Y')}") do |sheet|
    title_row = sheet.add_row [ "Journal Entry Vouchers", "", "", "", "", "", "IPSMPC", "" ], style: title_style
    sheet.merge_cells title_row.cells[(0..3)]
    sheet.merge_cells title_row.cells[(6..7)]

    service_row = sheet.add_row [
      @cooperative_service.try(:title),
      "", "", "", "", "", "Ifugao Public Servants", ""
    ], style: subtitle_style
    dates_row = sheet.add_row [
      "#{@from_date.strftime('%B %e, %Y')} - #{@to_date.strftime('%B %e, %Y')}",
      "", "", "", "", "", "Multipurpose Cooperative", ""
    ], style: subtitle_style
    sheet.merge_cells dates_row.cells[(0..3)]
    sheet.merge_cells service_row.cells[(0..3)]
    sheet.merge_cells dates_row.cells[(6..7)]
    sheet.merge_cells service_row.cells[(6..7)]

    sheet.add_row [ "", "", "", "", "", "", "", "" ], height: 5

    summary = sheet.add_row [ "SUMMARY", "", "", "", "", "", "", "" ], style: summary_style
    sheet.merge_cells summary.cells[(0..7)]

    entry_count = sheet.add_row [ "", "Entries", @entries_for_pdf.count, "", "", "", "", "" ], style: summary_style
    sheet.merge_cells entry_count.cells[(2..3)]

    sheet.add_row [ "", "Accounts", "", "", "", "", "Debit", "Credit" ], style: summary_style

    AccountingModule::Account.where(id: AccountingModule::Amount.where(entry_id: @entries_for_pdf.pluck(:id)).map(&:account).pluck(:id).uniq).find_each do |account|
      Money.new(AccountingModule::DebitAmount.where(entry_id: @entries_for_pdf.pluck(:id)).where(account_id: account.id).sum(:amount_cents)).amount
      accounts_row = sheet.add_row [ "", account.name, "", "", "", "",
                                    Money.new(AccountingModule::DebitAmount.where(entry_id: @entries_for_pdf.pluck(:id)).where(account_id: account.id).sum(:amount_cents)).amount,
                                    Money.new(AccountingModule::CreditAmount.where(entry_id: @entries_for_pdf.pluck(:id)).where(account_id: account.id).sum(:amount_cents)).amount ], style: comma
      sheet.merge_cells accounts_row.cells[(1..4)]
    end
    total_amounts = sheet.add_row [
      "", "Total", "", "", "", "", @entries_for_pdf.sum { |e| Money.new(e.debit_amounts.sum(:amount_cents)).amount }, @entries_for_pdf.sum { |e| Money.new(e.credit_amounts.sum(:amount_cents)).amount }
    ], style: total_style
    sheet.merge_cells total_amounts.cells[(2..3)]

    spacer = sheet.add_row [ "", "", "", "", "", "", "", "" ]
    sheet.merge_cells spacer.cells[(0..6)]

    heading = sheet.add_row [ "Date", "Description", "", "REF #", "Member/ Payee", "Account", "Debit", "Credit" ], style: header_style
    sheet.merge_cells heading.cells[(1..2)]
    @ordered_entries.sort_by { |e| e.reference_number.to_i }.each do |entry|
      desc_first_cell = ""
      desc_last_cell = ""
      date_first_cell = ""
      date_last_cell = ""
      num_first_cell = ""
      num_last_cell  = ""
      mem_first_cell = ""
      mem_last_cell = ""
      entry_row = sheet.add_row [
        entry.entry_date.strftime("%D"),
        entry.cancelled? ? "CANCELLED - #{entry.cancellation_description} (#{entry.cancelled_at.strftime('%D')})" : entry.description,
        "",
        entry.reference_number,
        entry.display_commercial_document,
        "",
        "",
        ""
      ], style: border, height: 0.5
      entry.debit_amounts.each do |amount|
        sheet.add_row [
          "",
          "",
          "",
          "",
          "",
          amount.account_name,
          entry.cancelled? ? 0 : amount.amount.amount,
          ""
        ], style: amounts_style
      end
      entry.credit_amounts.each do |amount|
        credit_amount_row = sheet.add_row [
          "",
          "",
          "",
          "",
          "",
          amount.account_name,
          "",
          entry.cancelled? ? 0 : amount.amount.amount
        ], style: amounts_style
        sheet.row_style(0 + 1, comma)
        desc_last_cell = credit_amount_row.cells[2].r
        desc_first_cell = entry_row.cells[1].r
        date_last_cell = credit_amount_row.cells[0].r
        date_first_cell = entry_row.cells[0].r
        num_last_cell = credit_amount_row.cells[3].r
        num_first_cell = entry_row.cells[3].r
        mem_last_cell = credit_amount_row.cells[4].r
        mem_first_cell = entry_row.cells[4].r
      end
      sheet.merge_cells "#{desc_first_cell}:#{desc_last_cell}"
      sheet.merge_cells "#{date_first_cell}:#{date_last_cell}"
      sheet.merge_cells "#{num_first_cell}:#{num_last_cell}"
      sheet.merge_cells "#{mem_first_cell}:#{mem_last_cell}"
    end
    sheet.column_widths 7, 10, 10, 5, 8, 25, 10, 10
  end
end
